{"version": 3, "mappings": ";AACA,QAAA,IAAA;;;;;;;;;;AAGA,sEAA+D,QAA/D;IACI,OAAOA,QAAAC,KAAA,SACCC,IAAA,CAAK,8BAAL,EAAqCC,SAArC,EAAgD,aAAhD,cACI,CACJ,QADI,EACM,6CADN,EAEJ,eAFI,EAEa,sBAFb,WAIH,CACD,KADC,EACMC,GADN,EAED,aAFC,EAEcC,WAFd,EAGD,mBAHC,EAGoB,EAHpB,EANF,CAAAC,KAAA;AADX;AAcA,+GAAwG,IAAxG;IAEI,OAAON,QAAAC,KAAA,SACCC,IAAA,CAAK,8BAAL,EAAqCC,SAArC,EAAgD,aAAhD,EAAmEI,sBAAJ,EAA/D,EAAmF,UAAnF,cACI,CACJ,QADI,EACM,2CADN,EAEJ,eAFI,EAEa,sBAFb,WAIH,CACD,OADC,EACQC,KADR,EAED,aAFC,EAEcH,WAFd,EAGD,iBAHC,EAGkBI,eAHlB,EANF,CAAAC,KAAA;AAFX", "sources": ["github.py"], "names": ["requests", "requests.post", "join", "repo_slug", "ref", "environment", "requests.post({\"url\": join(\"https://api.github.com/repos\", repo_slug, \"deployments\"), \"headers\": {\"Accept\": \"application/vnd.github.ant-man-preview+json\", \"Authorization\": `token ${oauth_token}`}, \"json\": {\"ref\": ref, \"environment\": environment, \"required_contexts\": []}}).json", "deployment_id", "state", "environment_url", "requests.post({\"url\": join(\"https://api.github.com/repos\", repo_slug, \"deployments\", deployment_id.toString(), \"statuses\"), \"headers\": {\"Accept\": \"application/vnd.github.flash-preview+json\", \"Authorization\": `token ${oauth_token}`}, \"json\": {\"state\": state, \"environment\": environment, \"environment_url\": environment_url}}).json"], "sourcesContent": ["import requests\nfrom os.path import join\n\n\ndef create_deployment(repo_slug, oauth_token, environment, ref='master'):\n    return requests.post(\n        url=join('https://api.github.com/repos', repo_slug, 'deployments'),\n        headers={\n            'Accept': 'application/vnd.github.ant-man-preview+json',\n            'Authorization': f'token {oauth_token}'\n        },\n        json={\n            'ref': ref,\n            'environment': environment,\n            'required_contexts': []  # bypass checking\n        }).json()\n\n\ndef create_deployment_status(repo_slug, oauth_token, deployment_id, state, environment, environment_url=None):\n    # assert state in {'success', 'failure'}\n    return requests.post(\n        url=join('https://api.github.com/repos', repo_slug, 'deployments', str(deployment_id), 'statuses'),\n        headers={\n            'Accept': 'application/vnd.github.flash-preview+json',\n            'Authorization': f'token {oauth_token}'\n        },\n        json={\n            'state': state,\n            'environment': environment,\n            'environment_url': environment_url\n        }).json()\n"]}